1.) Read file
public static void main(String[] args) throws IOException {
		// Take the file from the user
		System.out.println("Enter a filepath to read from ");
		Scanner in = new Scanner(System.in);
		String file_name = in.next();
		
		// Enter C:\Users\Kanishka\workspace\Liang\myscore.txt
		
		// Pass the file name to the file object
		File file = new File(file_name);
		
		// File object is passed to scanner for reading
		Scanner sc = new Scanner(file);
		
		// Read data from file
		while (sc.hasNext()) {
			String fname = sc.next();
			String mname = sc.next();
			String lname = sc.next();
			int score = sc.nextInt();
			System.out.println(fname + " " + mname + " " + lname + " " + score);
		}
		
		// Close the file
		sc.close();

}


2.) Read file - CSV
public void readFile() throws IOException {
		try {
			// Take the file from the user
			System.out.println("Enter a filepath to read from ");
			Scanner in = new Scanner(System.in);
			String file_name = in.next();
			
			// Pass the file name to the file object
			File inFile = new File(file_name);
			
			// File object is passed to scanner for reading
			Scanner freader = new Scanner(inFile);
			
			// skip the header
			freader.nextLine(); 

			String line;
			String[] fields;
			String name;
			double grade;
			
			// Read data from file
			while (freader.hasNextLine()) {
				line = freader.nextLine();
				fields = line.split(",");
				name = fields[0];
				grade = Double.parseDouble(fields[1]);
				
				students.add(new Lect4Student(name, grade));
			}
			
			// Close the scanners
			freader.close(); 
			in.close();
		} 
		catch (IOException e) {
			System.err.println(e);
			System.exit(1);
		}
		
}

PrintWriter Vs FileWriter
http://stackoverflow.com/questions/5759925/printwriter-vs-filewriter-in-java

3.) Write file
public static void main(String[] args) throws IOException {
		// Take the file from the user
		System.out.println("Enter a filepath to read from ");
		Scanner in = new Scanner(System.in);
		String file_name = in.next();
				
		// Pass the file name to the file object
		File file = new File(file_name);
		
		// Check if file exists
		if (file.exists()) {
			System.out.println("File exists");
			System.exit(1);
		}
		
		// Create a file
		PrintWriter output = new PrintWriter(file);
		
		// Write to a file
		output.print("John Smith ");
		output.println("100");
		output.print("Eric Jones ");
		output.println("80");
		
		// Close the file
		output.close();
}

4.) Write file - CSV
public void saveToCSV() {
		// Take the file form the user
		String filepath = JOptionPane.showInputDialog("Enter the path of the csv file to which the entries have to be saved :- ");
		
		// FileWriter is used to write data to a file
		FileWriter fileWriter = null;
		
		try {
			fileWriter = new FileWriter(filepath);
			
			for (int i = 0; i < mAttack.size(); i++) {
				fileWriter.write(String.valueOf(mAttack.get(i).getAttackId()));
				fileWriter.write(COMMA_DELIMITER);

				fileWriter.write(String.valueOf(mAttack.get(i).getMonth()));
				fileWriter.write(DATE_SLASH);

				fileWriter.write(String.valueOf(mAttack.get(i).getDay()));
				fileWriter.write(DATE_SLASH);

				fileWriter.write(String.valueOf(mAttack.get(i).getYear()));
				fileWriter.write(COMMA_DELIMITER);

				fileWriter.write(String.valueOf(mAttack.get(i).getMonsterName()));
				fileWriter.write(COMMA_DELIMITER);

				fileWriter.write(String.valueOf(mAttack.get(i).getAttackLocation()));
				fileWriter.write(COMMA_DELIMITER);

				fileWriter.write(String.valueOf(mAttack.get(i).getVictimCount()));
				fileWriter.write(COMMA_DELIMITER);
				
				fileWriter.write(NEW_LINE_SEPARATOR);
			}
			fileWriter.flush();
			fileWriter.close();
			JOptionPane.showMessageDialog(null, "CSV file successfully created!");
		}
		catch (Exception e) {
			JOptionPane.showMessageDialog(null, "File creation failed!");
		}		
}

5.) File copy
import java.util.*;
import java.io.*;

public class TextFileCopier {

	public static void main(String[] args) {
		// ... Get two file names from user.
		System.out.println("Enter a filepath to copy from, and one to copy to.");
		Scanner in = new Scanner(System.in);

		// ... Create File objects.
		File inFile = new File(in.next()); // File to read from.
		File outFile = new File(in.next()); // File to write to

		// ... Enclose in try..catch because of possible io exceptions.
		try {
			copyFile(inFile, outFile);

		} catch (IOException e) {
			System.err.println(e);
			System.exit(1);
		}
		in.close();
	}

	public static void copyFile(File fromFile, File toFile) throws IOException {
		// File object is passed to scanner for reading
		Scanner freader = new Scanner(fromFile);
		
		// Write to file
		BufferedWriter writer = new BufferedWriter(new FileWriter(toFile));

		// ... Loop as long as there are input lines.
		String line = null;
		while (freader.hasNextLine()) {
			line = freader.nextLine();
			writer.write(line);
			writer.newLine();
		}

		// ... Close reader and writer.
		freader.close();
		writer.close();
	}

}